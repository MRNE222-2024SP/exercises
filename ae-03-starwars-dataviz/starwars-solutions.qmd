---
title: "Visualizing Starwars characters"
author: ""
date: "`r Sys.Date()`"
output: 
  github_document: 
    fig_height: 5
    fig_width: 8
---

```{r load-packages, include=FALSE}
library(tidyverse)
library(palmerpenguins)
```

## Basic ggplot practice

1. Glimpse at the starwars data frame.
```{r glimpse-starwars}
glimpse(starwars)
```

2. Modify the following plot to: 

- map color to `gender` and size to `birth_year`,  
- set the transparency (`alpha`) of all of the points 0.6  
- replace the `---` to add a title and axis labels with units (assume height is in cm and mass is in kg).
```{r}
ggplot(starwars, aes(x = height, y = mass, color = gender, size = birth_year)) +
  geom_point() +
  labs(x = "Height (cm)",
       y = "Mass (kg)",
       title = "Character mass vs. height")
```

3. Modify the following plot to change the fill color of all of the bars to pink. Try first setting color to pink. The result may not be what you were expecting. We didn't explicitly go over how to change the fill color but the word `fill` is a hint - see if you can figure it out. You can either use the word `"pink"` (in quotes) or Google "hex color picker," select a pink-ish color, and use `#` followed by the six-digit hex color that corresponds to your pink color (e.g., `"#FFFFFF"`).

Remove the `coord_flip` layer to see what happens. Keep whichever plot (with or without `coord_flip()`) looks better.

```{r scatterplot}
ggplot(starwars, aes(x = reorder(species, species, function(x) length(x)))) +
  geom_bar(fill = "#ec03fc") +
  labs(x = "Species", y = "Count") +
  coord_flip()
```

4. Using the Palmer penguins data, map `body_mass_g` to the x-axis, `flipper_length_mm` to the y-axis, color to sex. Then facet by island and add a title and axis labels. Remove the `#` at the beginning of each line before running this code chunk.
```{r}
ggplot(penguins, aes(x = body_mass_g, y = flipper_length_mm, color = sex)) +
  geom_point() +
  facet_wrap(~ island) +
  labs(x = "Body mass (g)",
       y = "Flipper length (mm)",
       title = "Penguin body mass vs. flipper length")
```

5. Copy and paste the code from above into the chunk below, then replace `facet_wrap` with `facet_grid` to facet by both island and species.
```{r}
ggplot(penguins, aes(x = body_mass_g, y = flipper_length_mm, color = sex)) +
  geom_point() +
  facet_grid(species ~ island) +
  labs(x = "Body mass (g)",
       y = "Flipper length (mm)",
       title = "Penguin body mass vs. flipper length")
```

6. If this was easy for you, play around with any of the code above to see what happens when you make additional changes. See the [R4DS visualization chapter](https://r4ds.had.co.nz/data-visualisation.html) to explore different geoms, aesthetic options, etc.


## Visualizing numerical and categorical data practice

7. Pick a single categorical variable from the `starwars` data set and make a bar plot of its distribution. 

(A little bit of starter code is provided below, and the code chunk is set to not be evaluated with `eval = FALSE` because the current code in there is not valid code and hence the document wouldn't knit. Once you replace the code with valid code, set the chunk option to `eval = TRUE`, or remove the `eval` option altogether since it's set to `TRUE` by default.)

```{r barplot}
ggplot(starwars, aes(y = species)) +
  geom_bar() +
  labs(x = "Count", y = "")
```

8. Pick a single numerical variable and make a histogram of it.

(This time no starter code is provided, you're on your own!)

```{r histogram}
ggplot(starwars, aes(x = mass)) +
  geom_histogram(binwidth = 20) +
  labs(x = "Mass (kg)", y = "Count")
```

9. Pick a numerical variable and a categorical variable and make a visualization (you pick the type!) to visualize the relationship between the two variables. Along with your code and output, provide an interpretation of the visualization.

```{r num-cat}
#there are lots of options - here are just a few

ggplot(starwars, aes(x = mass, fill = gender)) +
  geom_histogram() +
  labs(x = "Mass (kg)", y = "Count", fill = "Gender")

starwars %>%
  drop_na(height) %>% #remove rows where height is missing
 ggplot(aes(y = reorder(name, height), x = height)) +
  geom_bar(stat = "identity") +
  labs(y = "", x = "Height (cm)")
```

10. Pick two categorical variables and make a visualization to show the relationship between the two variables. Along with your code and output, provide an interpretation of the visualization.

```{r cat-cat}
#lots of possibilities - here's just one

starwars %>%
  drop_na(hair_color, species) %>% #remove rows where hair color or species is missing
ggplot(aes(y = species, fill = hair_color)) +
  geom_bar() +
  labs(x = "Count", y = "", fill = "Hair color") +
  scale_fill_viridis_d(option = "magma") #use nicer color palette
```

11. Pick two numerical variables and two categorical variables and make a visualization that incorporates all of them and provide an interpretation with your answer.

```{r multi}
starwars %>%
  drop_na(gender) %>% #remove rows where gender is NA
ggplot(aes(x = mass, y = height, color = species)) +
  geom_point() +
  facet_wrap(~ gender)
```

12. If you finish early, make some more plots in the chunk below using the `starwars` or `penguins` datasets. Play around with the different aesthetics (color, size, shape, alpha, faceting).
```{r}

```

