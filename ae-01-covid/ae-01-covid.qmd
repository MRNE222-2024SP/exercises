---
title: "COVID-19 cases"
date: "`r Sys.Date()`"
format: 
  html: 
    toc: true
    toc_float: true
---

## Introduction

Countries around the world are responding to an outbreak of respiratory illness caused by a novel coronavirus, COVID-19. The outbreak first started in Wuhan, China, but cases have been identified in a growing number of other locations internationally, including the United States. In this report we explore the trajectory of cumulative cases in a number of countries.

The data come from the **coronavirus** package, which pulls data from the Johns Hopkins University Center for Systems Science and Engineering (JHU CCSE) Coronavirus repository. The coronavirus package provides a tidy format dataset of the 2019 Novel Coronavirus COVID-19 (2019-nCoV) epidemic. The package is available on GitHub [here](https://github.com/RamiKrispin/coronavirus) and is updated daily.

For our analysis, in addition to the coronavirus package, we will use the following packages for data wrangling and visualization.

-   **tidyverse** for data wrangling and visualization
-   **lubridate** package for handling dates
-   **glue** package for constructing text strings
-   **scales** package for formatting axis labels
-   **ggrepel** package for pretty printing of country labels

We will make use of the **DT** package for interactive display of tabular output in the Appendix.

```{r load-packages, warning=FALSE, message=FALSE}
library(coronavirus)
library(glue)
library(scales)
library(ggrepel)
library(DT)
library(tidyverse)
library(lubridate)
```

## Data prep

The data frame called `coronavirus` in the coronavirus package provides a daily summary of the coronavirus (COVID-19) cases by country. Each row in the data frame represents a country (or, where relevant, state/province). A full list of the countries in the data frame is provided in the [Appendix]. Note that the data provided in this package provides daily number of deaths, confirmed cases, and recovered cases. For this report, we will focus on the cases.

We will start by making our selection for the countries we want to explore.

```{r select-countries}
countries <- c(
  "Italy",
  "United Kingdom",
  "US",
  "Russia",
  "Canada"
)
```

In the following code chunk we filter the data frame for cases in the countries we specified above and calculate cumulative number of cases We will only visualize data since 10th confirmed case.

```{r prep-country-data}
country_data <- coronavirus %>%
  # filter for cases in countries of interest
  filter(
    type == "confirmed",
    country %in% countries
  ) %>%
  # fix country labels for pretty plotting
  mutate(
    country = case_when(
      country == "United Kingdom" ~ "UK",
      TRUE ~ country
    )
  ) %>%
  # calculate number of total cases for each country and date
  group_by(country, date) %>%
  summarise(tot_cases = sum(cases)) %>%
  # arrange by date in ascending order
  arrange(date) %>%
  # record daily cumulative cases as cumulative_cases
  mutate(cumulative_cases = cumsum(tot_cases)) %>%
  # only use days since the 10th confirmed case
  filter(cumulative_cases > 9) %>%
  # record days elapsed, end date, and end label
  mutate(
    days_elapsed = as.numeric(date - min(date)),
    end_date     = if_else(date == max(date), TRUE, FALSE),
    end_label    = if_else(end_date == TRUE, country, NA)) %>% 
  ungroup()
```

We also need to take a note of the "as of date" for the data so that we can properly label our visualization with the date of latest data update.

```{r record-as-of-date}
# get the maximum (greatest) date in the dataset
as_of_date <- country_data %>% 
  summarise(max(date)) %>% 
  pull()

as_of_date_formatted <- paste(wday(as_of_date, label = TRUE), month(as_of_date, label = TRUE), day(as_of_date), year(as_of_date))
```

These data are updated as of `r as_of_date_formatted`.

## Visualisation

The following visualization shows the number of cumulative cases vs. days elapsed since the 10th confirmed case in each country. The time span plotted for each country varies since some countries started seeing (and reporting) cases from COVID-19 much later than others. Plotting cases since the 10th case allows us to visualize the spread of the virus in each country with respect to its date of introduction to the country.

```{r visualise, warning=FALSE}
ggplot(data = country_data,
       mapping = aes(x = days_elapsed, 
                     y = cumulative_cases, 
                     color = country, 
                     label = end_label)) +
  # represent cumulative cases with lines
  geom_line(size = 0.7, alpha = 0.8) +
  # add points to line endings
  geom_point(data = country_data %>% filter(end_date)) +
  # add country labels, nudged above the lines
  geom_label_repel(nudge_y = 1, direction = "y", hjust = 1) + 
  # turn off legend
  guides(color = "none") +
  # use pretty colors
  scale_color_viridis_d() +
  # better formatting for y-axis
  scale_y_continuous(labels = label_comma()) +
  # use minimal theme
  theme_minimal() +
  # customize labels
  labs(
    x = "Days since 10th confirmed case",
    y = "Cumulative number of cases",
    title = "Cumulative cases from COVID-19, selected countries",
    subtitle = glue("Data as of", as_of_date_formatted, .sep = " "),
    caption = "Source: github.com/RamiKrispin/coronavirus"
  )
```

### You try

-   Examine cases in different countries. You'll need to first select your countries (a full list of countries is available in the appendix table), then re-run each code chunk after you select your countries to filter the original dataset to include just those countries, calculate cumulative cases, and then plot.

-   Examine cumulative deaths or recoveries instead of confirmed cases. This can be done by modifying the `type` variable that you filter for. Use `type == "death"` for deaths or `type == "recovery"` for recoveries. FYI, you can look at the first few rows of your data to see what variables it contains by just typing the name of the data object into the console. You can see the unique values of a variable using the `distinct` function. Below, we find out the distinct types of cases.

```{r}
coronavirus %>%
  select(type) %>%
  distinct()
```

## A step further

Often, normalizing total cases by population is a more informative metric of how prevalent covid is in a particular population. Here, we look at new daily cases per 100,000 people to be able to better compare across countries.

```{r}
norm_data <- coronavirus %>%
  # filter for confirmed cases in countries of interest
  filter(
    type == "confirmed",
    country %in% countries
  ) %>%
  # fix country labels for pretty plotting
  mutate(
    country = case_when(
      country == "United Kingdom" ~ "UK",
      TRUE ~ country
    )
  ) %>%
  # calculate number of total cases and total cases per 100,000 people for each country and date
  group_by(country, date) %>%
  summarise(tot_cases = sum(cases),
            population = sum(population, na.rm = TRUE),
            cases_per_100k = tot_cases / population * 100000) %>%
  # ungroup
  ungroup()
```

Plot daily new cases per 100,000 people. Sometimes it's easier to see the data if you plot each country in a separate panel. We use the function facet_wrap here to do that.

```{r}
#note that data = norm_data now, rather than country_data
ggplot(data = norm_data,
       mapping = aes(x = date, 
                     y = cases_per_100k, 
                     color = country)) +
  # represent cases with lines
  geom_line(size = 0.7, alpha = 0.8) +
  # turn off legend
  guides(color = "none") +
  # create a separate panel for each country
  facet_wrap(~country) +
  # use pretty colors
  scale_color_viridis_d() +
  # use minimal theme
  theme_minimal() +
  # rotate x axis labels by 45 degrees
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust= 1)) +
  # customize labels
  labs(
    x = "",
    y = "Daily cases per 100,000",
    title = "Daily COVID-19 cases per 100,000, selected countries",
    subtitle = glue("Data as of", as_of_date_formatted, .sep = " "),
    caption = "Source: github.com/RamiKrispin/coronavirus"
  )
```

### You try

-   Look at the `coronavirus` package [documentation page](https://github.com/RamiKrispin/coronavirus). What datasets does it contain? What are the variables in each dataset? What other questions could you explore with these data?

## Appendix

A list of countries in the `coronavirus` data frame is provided below.

```{r list-countries, echo=FALSE}
coronavirus %>%
  select(country) %>%
  arrange(country) %>%
  distinct() %>%
  datatable()
```
